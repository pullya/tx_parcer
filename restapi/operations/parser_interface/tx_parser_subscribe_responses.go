// Code generated by go-swagger; DO NOT EDIT.

package parser_interface

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/pullya/tx_parcer/models"
)

// TxParserSubscribeOKCode is the HTTP code returned for type TxParserSubscribeOK
const TxParserSubscribeOKCode int = 200

/*
TxParserSubscribeOK Successful response

swagger:response txParserSubscribeOK
*/
type TxParserSubscribeOK struct {

	/*
	  In: Body
	*/
	Payload *TxParserSubscribeOKBody `json:"body,omitempty"`
}

// NewTxParserSubscribeOK creates TxParserSubscribeOK with default headers values
func NewTxParserSubscribeOK() *TxParserSubscribeOK {

	return &TxParserSubscribeOK{}
}

// WithPayload adds the payload to the tx parser subscribe o k response
func (o *TxParserSubscribeOK) WithPayload(payload *TxParserSubscribeOKBody) *TxParserSubscribeOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the tx parser subscribe o k response
func (o *TxParserSubscribeOK) SetPayload(payload *TxParserSubscribeOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TxParserSubscribeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
TxParserSubscribeDefault Unsuccessful response

swagger:response txParserSubscribeDefault
*/
type TxParserSubscribeDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewTxParserSubscribeDefault creates TxParserSubscribeDefault with default headers values
func NewTxParserSubscribeDefault(code int) *TxParserSubscribeDefault {
	if code <= 0 {
		code = 500
	}

	return &TxParserSubscribeDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the tx parser subscribe default response
func (o *TxParserSubscribeDefault) WithStatusCode(code int) *TxParserSubscribeDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the tx parser subscribe default response
func (o *TxParserSubscribeDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the tx parser subscribe default response
func (o *TxParserSubscribeDefault) WithPayload(payload *models.ErrorResponse) *TxParserSubscribeDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the tx parser subscribe default response
func (o *TxParserSubscribeDefault) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TxParserSubscribeDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
